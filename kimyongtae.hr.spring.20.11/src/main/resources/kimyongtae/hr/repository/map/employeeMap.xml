<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 
	'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>
<mapper namespace='kimyongtae.hr.repository.map.EmployeeMap'>
	<select id='selectEmployees' resultMap='employeeMap'>
		select emp_id, emp_name, salary, hire_date
		from employees
		order by emp_id desc
	</select>
	
	<select id='selectEmployee' resultMap='employeeMap'>
		select emp_id, emp_name, salary, hire_date
		from employees
		where emp_id = #{empId}
	</select>	
	
	<resultMap id='employeeMap' type='employee'>
		<id     property='empId'    column='emp_id'/>
		<result property='empName'  column='emp_name'/>
		<result property='salary'   column='salary'/>
		<result property='hireDate' column='hire_date'/>
	</resultMap>
	
	<insert id='insertEmployee'>
		insert into employees (emp_id, emp_name, hire_date) 
		values (emp_empid_seq.nextval, #{empName}, #{hireDate})
	</insert>
	
	<update id='updateEmployee'>
		update employees
		set emp_name = #{empName}, hire_date = #{hireDate}
		where emp_id = #{empId}
	</update>
	
	<delete id='deleteEmployee'>
		delete employees
		where emp_id = #{empId}
	</delete>
	
	<select id='selectEmployeeSaleCnt' resultType='_int'>
		select count(*)
		from employees
		where exists (
    		select *
   			from sales
    		where sales.emp_id = employees.emp_id)
	</select>
	
	<update id='updateSalaries'>
		<include refid='updateSalarySql'/>
	</update>
	
	<update id='updateSalary'>	
		<include refid='updateSalarySql'/>
		where emp_id = #{emp_id}                
	</update>
	
	<sql id='updateSalarySql'>
		update employees
		set salary = 
    		(select case when floor(months_between(current_date, hire_date) / 12) >= 5 then sales * .2 + 20000000
                		when floor(months_between(current_date, hire_date) / 12) >= 3 then sales * .2 + 10000000
                		else sales * .2
            		end
     		from sales
     		where sales.emp_id = employees.emp_id)
	</sql>
</mapper>	